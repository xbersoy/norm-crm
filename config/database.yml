default: &default
  adapter: postgresql
  encoding: unicode
  prepared_statements: false

development_default: &development_default
  <<: *default
  pool: 5
  host: <%= ENV['DB_HOST'] || '127.0.0.1' %>
  port: <%= ENV['DB_PORT'] || 5432 %>
  template: template0

development:
  norm:
    <<: *development_default
    database: roa_dev
    migrations_paths: db/migrate

test_default: &test_default
  <<: *default
  pool: 5
  host: <%= ENV['DB_HOST'] || '127.0.0.1' %>
  port: <%= ENV['DB_PORT'] || 5432 %>
  template: template0

test:
  norm:
    <<: *test_default
    database: norm_test<%= ENV['TEST_ENV_NUMBER'] %>
    migrations_paths: db/migrate

staging_default: &staging_default
  <<: *default
  # pool: <%= ENV["#{(ENV['DYNO'] || '').gsub(/\.\d+/, '').upcase}_DB_POOL_SIZE"] || 5 %>
  pool: <%= ENV['RAILS_MAX_THREADS'] %>
  advisory_locks: false

staging:
  norm:
    <<: *staging_default
    url: <%= ENV['ROA_PGBOUNCER_URL'] || ENV['ROA_DB_URL'] %>
    migrations_paths: db/migrate

production_default: &production_default
  <<: *default
  # https://devcenter.heroku.com/articles/concurrency-and-database-connections#threaded-servers
  #pool: <%= ENV["#{(ENV['DYNO'] || '').gsub(/\.\d+/, '').upcase}_DB_POOL_SIZE"] || 5 %> # bu sekilde yapinca dyno isminden erisilebilir WEB_DB_POOL_SIZE gibi
  pool: <%= ENV['RAILS_MAX_THREADS'] %>
  advisory_locks: false

production:
  norm:
    <<: *production_default
    url: <%= ENV['ROA_PGBOUNCER_URL'] || ENV['ROA_DB_URL'] %>
    migrations_paths: db/migrate
